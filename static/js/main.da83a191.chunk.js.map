{"version":3,"sources":["Components/PersonsList/PersonsList.js","Components/Edit/Edit.js","Components/Person/Person.js","App.js","reportWebVitals.js","index.js"],"names":["PersonsList","setPeopleList","peopleList","active","useState","people","setPeople","error","setError","list","useRef","db","useParams","personID","Dexie","version","stores","persons","useEffect","length","updateDB","a","toArray","fetchedDB","JSON","stringify","history","useHistory","getPeople","clear","preDB","i","push","name","title","first","last","email","phone","picture","large","bulkAdd","axios","then","res","data","results","catch","scrollToAdded","current","scrollTop","scrollHeight","className","onClick","updatedPeople","concat","ref","map","person","index","id","console","log","Edit","setName","surname","setSurname","setPhone","setEmail","image","setImage","emailInvalid","setEmailInvalid","phoneInvalid","setPhoneInvalid","handleSubmit","e","preventDefault","peopleListPrev","validationMail","validationPhone","backToDetails","test","String","toLowerCase","onSubmit","src","alt","type","value","onChange","target","Person","setActive","parseInt","App","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.da83a191.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport Dexie from \"dexie\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\nimport { useParams } from \"react-router\";\n\nimport \"./PersonsList.scss\";\nconst PersonsList = ({ setPeopleList, peopleList, active }) => {\n  const [people, setPeople] = useState([]);\n  const [error, setError] = useState(false);\n  const list = useRef(null);\n  let { personID } = useParams();\n  const db = new Dexie(\"PersonsDB\");\n  db.version(1).stores({\n    persons: \"++id\",\n  });\n  useEffect(() => {\n    if (people.length) {\n      updateDB();\n    }\n    setPeopleList(people);\n  }, [people]);\n  useEffect(async () => {\n    const fetchedDB = await db.persons.toArray();\n    if (\n      peopleList.length &&\n      JSON.stringify(peopleList) != JSON.stringify(fetchedDB)\n    ) {\n      updateDB();\n    }\n  }, [peopleList]);\n  const history = useHistory();\n\n  const goDetails = (id) => {\n    history.push(`/details/${id}`);\n  };\n\n  useEffect(async () => {\n    const fetchedDB = await db.persons.toArray();\n\n    if (fetchedDB.length > 0) {\n      setPeople(fetchedDB);\n      return;\n    } else {\n      getPeople();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const updateDB = async () => {\n    await db.persons.clear();\n    var preDB = [];\n    for (let i = 0; i < people.length; ++i) {\n      preDB.push({\n        name: {\n          title: people[i].name.title,\n          first: people[i].name.first,\n          last: people[i].name.last,\n        },\n        email: people[i].email,\n        phone: people[i].phone,\n        picture: { large: people[i].picture.large },\n      });\n    }\n    db.persons.bulkAdd(preDB);\n  };\n  const getPeople = () => {\n    const url = \"https://randomuser.me/api/?results=10\";\n    axios(url)\n      .then((res) => {\n        setPeople(res.data.results);\n      })\n      .catch(function () {\n        setError(true);\n      });\n  };\n  const addPeople = () => {\n    const url = \"https://randomuser.me/api/?results=2\";\n    axios(url)\n      .then((res) => {\n        const prevPeople = people;\n        const updatedPeople = prevPeople.concat(res.data.results);\n        setPeople(updatedPeople);\n        scrollToAdded();\n      })\n      .catch(function () {\n        setError(true);\n      });\n  };\n  const scrollToAdded = () => {\n    list.current.scrollTop = list.current.scrollHeight;\n  };\n  return (\n    <section className=\"persons-list-container\">\n      <div className=\"actions\">\n        <button\n          className=\"actions__modify-list\"\n          onClick={() => {\n            addPeople();\n          }}\n        >\n          add\n        </button>\n\n        <button\n          className=\"actions__modify-list\"\n          onClick={() => {\n            getPeople();\n          }}\n        >\n          reset\n        </button>\n      </div>\n      {error ? <div className=\"error\">Error occured</div> : null}\n      <ul ref={list} className=\"persons-list\">\n        {people.map((person, index) => (\n          <li\n            className={`persons-list__person ${\n              index === active ? \"active\" : \"\"\n            }`}\n            key={index}\n            onClick={() => {\n              goDetails(index);\n            }}\n          >\n            {console.log(active)}\n            {person.name.title} {person.name.first} {person.name.last}\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n};\nexport default PersonsList;\n","import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport { useHistory } from \"react-router-dom\";\nimport \"./Edit.scss\";\nconst Edit = ({ peopleList, setPeopleList }) => {\n  const [people, setPeople] = useState([]);\n  const [name, setName] = useState(\"\");\n  const [surname, setSurname] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [image, setImage] = useState(\"\");\n\n  const [emailInvalid, setEmailInvalid] = useState(false);\n  const [phoneInvalid, setPhoneInvalid] = useState(false);\n\n  let { personID } = useParams();\n  const history = useHistory();\n  useEffect(() => {\n    setPeople(peopleList);\n  }, [peopleList]);\n  useEffect(() => {\n    if (peopleList[personID]) {\n      setName(peopleList[personID].name.first);\n      setSurname(peopleList[personID].name.last);\n      setPhone(peopleList[personID].phone);\n      setEmail(peopleList[personID].email);\n      setImage(peopleList[personID].picture.large);\n    }\n  }, [peopleList, personID]);\n  useEffect(() => {\n    //if (JSON.stringify(peopleList) !== JSON.stringify(people))\n    // setPeopleList(people);\n  }, [people]);\n  const handleChangeName = (e) => {\n    setName(e.target.value);\n  };\n  const handleChangeSurname = (e) => {\n    setSurname(e.target.value);\n  };\n  const handleChangeEmail = (e) => {\n    setEmail(e.target.value);\n  };\n  const handleChangePhone = (e) => {\n    setPhone(e.target.value);\n  };\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const peopleListPrev = [...peopleList];\n    validationMail();\n    peopleListPrev[personID].name.first = name;\n    peopleListPrev[personID].name.last = surname;\n    peopleListPrev[personID].email = email;\n    peopleListPrev[personID].phone = phone;\n    if (validationMail() && validationPhone()) {\n      setPeopleList(peopleListPrev);\n    } else {\n      return false;\n    }\n    backToDetails();\n  };\n  function validationMail() {\n    const mailRegex =\n      /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    if (mailRegex.test(String(email).toLowerCase())) {\n      setEmailInvalid(false);\n      return true;\n    } else {\n      setEmailInvalid(true);\n      return false;\n    }\n  }\n  function validationPhone() {\n    const phoneRegex = /^[+]*[(]{0,1}[0-9]{1,4}[)]{0,1}[-\\s./0-9]*$/g;\n    if (phoneRegex.test(String(phone).toLowerCase())) {\n      setPhoneInvalid(false);\n      return true;\n    } else {\n      setPhoneInvalid(true);\n      return false;\n    }\n  }\n  const backToDetails = () => {\n    history.push(`/details/${personID}`);\n  };\n  return (\n    <section>\n      <form onSubmit={handleSubmit}>\n        <img src={image} alt={`${name}`} />\n        <div>\n          <label> first name</label>\n          <input type=\"text\" value={name} onChange={handleChangeName} />\n        </div>\n        <div>\n          <label> last name</label>\n          <input type=\"text\" value={surname} onChange={handleChangeSurname} />\n        </div>\n        <div>\n          <label>Phone</label>\n          <input\n            type=\"text\"\n            value={phone}\n            onChange={handleChangePhone}\n            className={`${phoneInvalid ? \"invalid\" : \"\"}`}\n          />\n        </div>\n        <div>\n          <label>Email</label>\n          <input\n            type=\"text\"\n            value={email}\n            onChange={handleChangeEmail}\n            className={`${emailInvalid ? \"invalid\" : \"\"}`}\n          />\n        </div>\n        <input type=\"submit\" value=\"Wyślij\" />\n      </form>\n    </section>\n  );\n};\nexport default Edit;\n","import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport { useHistory } from \"react-router-dom\";\nconst Person = ({ peopleList, setActive }) => {\n  const [people, setPeople] = useState([]);\n  let { personID } = useParams();\n  const history = useHistory();\n  useEffect(() => {\n    setPeople(peopleList);\n  }, [peopleList]);\n  useEffect(() => {\n    setActive(parseInt(personID));\n  }, [personID]);\n  const edit = (id) => {\n    history.push(`/edit/${id}`);\n  };\n  return (\n    <section>\n      {people[personID] ? (\n        <article className=\"details\">\n          <img\n            src={people[personID].picture.large}\n            alt={`${people[personID].name.first}-image`}\n          />\n          <div className=\"details__names\">\n            <div>{people[personID].name.title}</div>\n            <div>{people[personID].name.first}</div>\n            <div>{people[personID].name.last}</div>\n          </div>\n          <div className=\"details__contact\">\n            <div>{people[personID].phone}</div>\n            <div>{people[personID].email}</div>\n          </div>\n        </article>\n      ) : null}\n\n      <button\n        onClick={() => {\n          edit(personID);\n        }}\n      >\n        edit\n      </button>\n    </section>\n  );\n};\nexport default Person;\n","import React, { useState } from \"react\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\nimport \"./App.scss\";\nimport PersonsList from \"./Components/PersonsList/PersonsList\";\nimport Edit from \"./Components/Edit/Edit\";\nimport Person from \"./Components/Person/Person\";\n\nfunction App() {\n  const [peopleList, setPeopleList] = useState([]);\n  const [active, setActive] = useState();\n\n  return (\n    <HashRouter>\n      <div className=\"body-layout\">\n        <PersonsList\n          setPeopleList={setPeopleList}\n          peopleList={peopleList}\n          active={active}\n        />\n\n        <Switch>\n          <Route path=\"/edit/:personID\">\n            <Edit peopleList={peopleList} setPeopleList={setPeopleList} />\n          </Route>\n          <Route exact path=\"/details/:personID\">\n            <Person peopleList={peopleList} setActive={setActive} />\n          </Route>\n        </Switch>\n      </div>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}