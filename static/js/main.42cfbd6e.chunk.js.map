{"version":3,"sources":["Components/PersonsList/PersonsList.js","Components/Edit/Edit.js","Components/Person/Person.js","App.js","reportWebVitals.js","index.js"],"names":["PersonsList","setPeopleList","peopleList","useState","people","setPeople","db","Dexie","version","stores","persons","useEffect","length","updateDB","a","toArray","fetchedDB","JSON","stringify","history","useHistory","getPeople","clear","preDB","i","push","name","title","first","last","email","phone","picture","large","bulkAdd","axios","then","res","data","results","console","log","className","onClick","updatedPeople","concat","map","person","index","id","Edit","setName","surname","setSurname","setPhone","setEmail","image","setImage","emailInvalid","setEmailInvalid","phoneInvalid","setPhoneInvalid","personID","useParams","handleSubmit","e","preventDefault","peopleListPrev","validationMail","validationPhone","backToDetails","test","String","toLowerCase","onSubmit","src","alt","type","value","onChange","target","Person","App","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.42cfbd6e.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Dexie from \"dexie\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\nimport \"./PersonsList.scss\";\nconst PersonsList = ({ setPeopleList, peopleList }) => {\n  const [people, setPeople] = useState([]);\n  const db = new Dexie(\"PersonsDB\");\n  db.version(1).stores({\n    persons: \"++id\",\n  });\n  useEffect(() => {\n    if (people.length) {\n      updateDB();\n    }\n    setPeopleList(people);\n  }, [people]);\n  useEffect(async () => {\n    const fetchedDB = await db.persons.toArray();\n    if (\n      peopleList.length &&\n      JSON.stringify(peopleList) != JSON.stringify(fetchedDB)\n    ) {\n      updateDB();\n    }\n  }, [peopleList]);\n  const history = useHistory();\n\n  const goDetails = (id) => {\n    history.push(`/details/${id}`);\n  };\n\n  useEffect(async () => {\n    const fetchedDB = await db.persons.toArray();\n\n    if (fetchedDB.length > 0) {\n      setPeople(fetchedDB);\n      return;\n    } else {\n      getPeople();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const updateDB = async () => {\n    await db.persons.clear();\n    var preDB = [];\n    for (let i = 0; i < people.length; ++i) {\n      preDB.push({\n        name: {\n          title: people[i].name.title,\n          first: people[i].name.first,\n          last: people[i].name.last,\n        },\n        email: people[i].email,\n        phone: people[i].phone,\n        picture: { large: people[i].picture.large },\n      });\n    }\n    db.persons.bulkAdd(preDB);\n  };\n  const getPeople = () => {\n    const url = \"https://randomuser.me/api/?results=10\";\n    axios(url).then((res) => {\n      setPeople(res.data.results);\n      console.log(res.data.results);\n    });\n  };\n  const addPeople = () => {\n    const url = \"https://randomuser.me/api/?results=2\";\n    axios(url).then((res) => {\n      const prevPeople = people;\n      const updatedPeople = prevPeople.concat(res.data.results);\n      setPeople(updatedPeople);\n    });\n  };\n  return (\n    <section className=\"persons-list-container\">\n      <div className=\"actions\">\n        <button\n          onClick={() => {\n            addPeople();\n          }}\n        >\n          add\n        </button>\n\n        <button\n          onClick={() => {\n            getPeople();\n          }}\n        >\n          reset\n        </button>\n      </div>\n      <ul className=\"persons-list\">\n        {people.map((person, index) => (\n          <li\n            className=\"persons-list__person\"\n            key={index}\n            onClick={() => {\n              goDetails(index);\n            }}\n          >\n            {person.name.title}\n            {person.name.first}\n            {person.name.last}\n            {person.name.phone}\n            {person.name.email}\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n};\nexport default PersonsList;\n","import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport { useHistory } from \"react-router-dom\";\nimport \"./Edit.scss\";\nconst Edit = ({ peopleList, setPeopleList }) => {\n  const [people, setPeople] = useState([]);\n  const [name, setName] = useState(\"\");\n  const [surname, setSurname] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [image, setImage] = useState(\"\");\n\n  const [emailInvalid, setEmailInvalid] = useState(false);\n  const [phoneInvalid, setPhoneInvalid] = useState(false);\n\n  let { personID } = useParams();\n  const history = useHistory();\n  useEffect(() => {\n    setPeople(peopleList);\n  }, [peopleList]);\n  useEffect(() => {\n    if (peopleList[personID]) {\n      setName(peopleList[personID].name.first);\n      setSurname(peopleList[personID].name.last);\n      setPhone(peopleList[personID].phone);\n      setEmail(peopleList[personID].email);\n      setImage(peopleList[personID].picture.large);\n    }\n  }, [peopleList]);\n  useEffect(() => {\n    //if (JSON.stringify(peopleList) !== JSON.stringify(people))\n    // setPeopleList(people);\n  }, [people]);\n  const handleChangeName = (e) => {\n    setName(e.target.value);\n  };\n  const handleChangeSurname = (e) => {\n    setSurname(e.target.value);\n  };\n  const handleChangeEmail = (e) => {\n    setEmail(e.target.value);\n  };\n  const handleChangePhone = (e) => {\n    setPhone(e.target.value);\n  };\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const peopleListPrev = [...peopleList];\n    validationMail();\n    peopleListPrev[personID].name.first = name;\n    peopleListPrev[personID].name.last = surname;\n    peopleListPrev[personID].email = email;\n    peopleListPrev[personID].phone = phone;\n    if (validationMail() && validationPhone()) {\n      setPeopleList(peopleListPrev);\n    } else {\n      return false;\n    }\n    backToDetails();\n  };\n  function validationMail() {\n    const mailRegex =\n      /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    if (mailRegex.test(String(email).toLowerCase())) {\n      setEmailInvalid(false);\n      return true;\n    } else {\n      setEmailInvalid(true);\n      return false;\n    }\n  }\n  function validationPhone() {\n    const phoneRegex = /^[+]*[(]{0,1}[0-9]{1,4}[)]{0,1}[-\\s\\./0-9]*$/g;\n    if (phoneRegex.test(String(phone).toLowerCase())) {\n      setPhoneInvalid(false);\n      return true;\n    } else {\n      setPhoneInvalid(true);\n      return false;\n    }\n  }\n  const backToDetails = () => {\n    history.push(`/details/${personID}`);\n  };\n  return (\n    <section>\n      <form onSubmit={handleSubmit}>\n        <img src={image} alt={`${name}-image`} />\n        <div>\n          <label> first name</label>\n          <input type=\"text\" value={name} onChange={handleChangeName} />\n        </div>\n        <div>\n          <label> last name</label>\n          <input type=\"text\" value={surname} onChange={handleChangeSurname} />\n        </div>\n        <div>\n          <label>Phone</label>\n          <input\n            type=\"text\"\n            value={phone}\n            onChange={handleChangePhone}\n            className={`${phoneInvalid ? \"invalid\" : \"\"}`}\n          />\n        </div>\n        <div>\n          <label>Email</label>\n          <input\n            type=\"text\"\n            value={email}\n            onChange={handleChangeEmail}\n            className={`${emailInvalid ? \"invalid\" : \"\"}`}\n          />\n        </div>\n        <input type=\"submit\" value=\"Wyślij\" />\n      </form>\n    </section>\n  );\n};\nexport default Edit;\n","import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport { useHistory } from \"react-router-dom\";\nconst Person = ({ peopleList }) => {\n  const [people, setPeople] = useState([]);\n  let { personID } = useParams();\n  const history = useHistory();\n  useEffect(() => {\n    setPeople(peopleList);\n  }, [peopleList]);\n\n  const edit = (id) => {\n    history.push(`/edit/${id}`);\n  };\n  return (\n    <section>\n      {people[personID] ? (\n        <article className=\"details\">\n          <img\n            src={people[personID].picture.large}\n            alt={`${people[personID].name.first}-image`}\n          />\n          {console.log(people[personID])}\n          <div className=\"details__names\">\n            <div>{people[personID].name.title}</div>\n            <div>{people[personID].name.first}</div>\n            <div>{people[personID].name.last}</div>\n          </div>\n          <div className=\"details__contact\">\n            <div>{people[personID].phone}</div>\n            <div>{people[personID].email}</div>\n          </div>\n        </article>\n      ) : null}\n\n      <button\n        onClick={() => {\n          edit(personID);\n        }}\n      >\n        edit\n      </button>\n    </section>\n  );\n};\nexport default Person;\n","import React, { useState, useEffect } from \"react\";\nimport {\n  BrowserRouter as Router,\n  HashRouter,\n  Route,\n  Switch,\n} from \"react-router-dom\";\nimport \"./App.scss\";\nimport PersonsList from \"./Components/PersonsList/PersonsList\";\nimport Edit from \"./Components/Edit/Edit\";\nimport Person from \"./Components/Person/Person\";\n\nfunction App() {\n  const [peopleList, setPeopleList] = useState([]);\n\n  return (\n    <HashRouter>\n      <div className=\"body-layout\">\n        <PersonsList setPeopleList={setPeopleList} peopleList={peopleList} />\n\n        <Switch>\n          <Route path=\"/edit/:personID\">\n            <Edit peopleList={peopleList} setPeopleList={setPeopleList} />\n          </Route>\n          <Route exact path=\"/details/:personID\">\n            <Person peopleList={peopleList} />\n          </Route>\n        </Switch>\n      </div>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}