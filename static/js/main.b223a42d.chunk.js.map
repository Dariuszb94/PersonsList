{"version":3,"sources":["Components/PersonsList/PersonsList.js","Components/Edit/Edit.js","Components/Person/Person.js","App.js","reportWebVitals.js","index.js"],"names":["PersonsList","setPeopleList","peopleList","active","useState","people","setPeople","error","setError","list","useRef","db","Dexie","a","persons","toArray","fetchedDB","length","JSON","stringify","updateDB","console","log","version","stores","useEffect","checkDB","history","useHistory","getPeople","checkGet","clear","preDB","i","push","name","title","first","last","email","phone","picture","large","bulkAdd","axios","then","res","data","results","catch","scrollToAdded","current","scrollTop","scrollHeight","className","id","onClick","updatedPeople","concat","ref","map","person","index","Edit","setName","surname","setSurname","setPhone","setEmail","image","setImage","emailInvalid","setEmailInvalid","phoneInvalid","setPhoneInvalid","nameInvalid","setNameInvalid","surnameInvalid","setSurnameInvalid","personID","useParams","handleSubmit","e","preventDefault","peopleListPrev","validationMail","validationPhone","validationName","validationSurname","backToDetails","test","String","toLowerCase","onSubmit","src","alt","type","value","onChange","target","Person","setActive","parseInt","App","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b223a42d.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport Dexie from \"dexie\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\n\nimport \"./PersonsList.scss\";\nconst PersonsList = ({ setPeopleList, peopleList, active }) => {\n  const [people, setPeople] = useState([]);\n  const [error, setError] = useState(false);\n  const list = useRef(null);\n  const db = new Dexie(\"PersonsDB\");\n  db.version(1).stores({\n    persons: \"++id\",\n  });\n  useEffect(() => {\n    if (people.length) {\n      updateDB();\n    }\n    setPeopleList(people);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [people, setPeopleList]);\n  useEffect(() => {\n    checkDB();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [peopleList]);\n  async function checkDB() {\n    try {\n      const fetchedDB = await db.persons.toArray();\n      if (\n        peopleList.length &&\n        JSON.stringify(peopleList) !== JSON.stringify(fetchedDB)\n      ) {\n        updateDB();\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  }\n  const history = useHistory();\n\n  const goDetails = (id) => {\n    history.push(`/details/${id}`);\n  };\n\n  useEffect(() => {\n    checkGet();\n  }, []);\n  async function checkGet() {\n    try {\n      const fetchedDB = await db.persons.toArray();\n      if (fetchedDB.length > 0) {\n        setPeople(fetchedDB);\n        return;\n      } else {\n        getPeople();\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  const updateDB = async () => {\n    await db.persons.clear();\n    var preDB = [];\n    for (let i = 0; i < people.length; ++i) {\n      preDB.push({\n        name: {\n          title: people[i].name.title,\n          first: people[i].name.first,\n          last: people[i].name.last,\n        },\n        email: people[i].email,\n        phone: people[i].phone,\n        picture: { large: people[i].picture.large },\n      });\n    }\n    db.persons.bulkAdd(preDB);\n  };\n  const getPeople = () => {\n    const url = \"https://randomuser.me/api/?results=10\";\n    axios(url)\n      .then((res) => {\n        setPeople(res.data.results);\n      })\n      .catch(function () {\n        setError(true);\n      });\n  };\n  const addPeople = () => {\n    const url = \"https://randomuser.me/api/?results=2\";\n    axios(url)\n      .then((res) => {\n        const prevPeople = people;\n        const updatedPeople = prevPeople.concat(res.data.results);\n        setPeople(updatedPeople);\n        scrollToAdded();\n      })\n      .catch(function () {\n        setError(true);\n      });\n  };\n  const scrollToAdded = () => {\n    list.current.scrollTop = list.current.scrollHeight;\n  };\n  return (\n    <section className=\"persons-list-container\">\n      <h1 className=\"persons-list__header\">List of people</h1>\n      <div className=\"actions\">\n        <button\n          className=\"actions__modify-list\"\n          id=\"add\"\n          onClick={() => {\n            addPeople();\n          }}\n        >\n          add\n        </button>\n\n        <button\n          className=\"actions__modify-list\"\n          onClick={() => {\n            getPeople();\n          }}\n        >\n          reset\n        </button>\n      </div>\n      {error ? <div className=\"error\">Error occured</div> : null}\n      <ul ref={list} className=\"persons-list\">\n        {people.map((person, index) => (\n          <li\n            className={`persons-list__person ${\n              index === active ? \"active\" : \"\"\n            }`}\n            key={index}\n            onClick={() => {\n              goDetails(index);\n            }}\n          >\n            {person.name.title} {person.name.first} {person.name.last}\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n};\nexport default PersonsList;\n","import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport { useHistory } from \"react-router-dom\";\nimport \"./Edit.scss\";\nconst Edit = ({ peopleList, setPeopleList }) => {\n  const [people, setPeople] = useState([]);\n  const [name, setName] = useState(\"\");\n  const [surname, setSurname] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [image, setImage] = useState(\"\");\n\n  const [emailInvalid, setEmailInvalid] = useState(false);\n  const [phoneInvalid, setPhoneInvalid] = useState(false);\n  const [nameInvalid, setNameInvalid] = useState(false);\n  const [surnameInvalid, setSurnameInvalid] = useState(false);\n  let { personID } = useParams();\n  const history = useHistory();\n  useEffect(() => {\n    setPeople(peopleList);\n  }, [peopleList]);\n  useEffect(() => {\n    if (peopleList[personID]) {\n      setName(peopleList[personID].name.first);\n      setSurname(peopleList[personID].name.last);\n      setPhone(peopleList[personID].phone);\n      setEmail(peopleList[personID].email);\n      setImage(peopleList[personID].picture.large);\n    }\n  }, [peopleList, personID]);\n\n  const handleChangeName = (e) => {\n    setName(e.target.value);\n  };\n  const handleChangeSurname = (e) => {\n    setSurname(e.target.value);\n  };\n  const handleChangeEmail = (e) => {\n    setEmail(e.target.value);\n  };\n  const handleChangePhone = (e) => {\n    setPhone(e.target.value);\n  };\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const peopleListPrev = [...peopleList];\n    peopleListPrev[personID].name.first = name;\n    peopleListPrev[personID].name.last = surname;\n    peopleListPrev[personID].email = email;\n    peopleListPrev[personID].phone = phone;\n    if (\n      validationMail() &&\n      validationPhone() &&\n      validationName() &&\n      validationSurname()\n    ) {\n      setPeopleList(peopleListPrev);\n    } else {\n      return false;\n    }\n    backToDetails();\n  };\n  function validationMail() {\n    const mailRegex =\n      /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    if (mailRegex.test(String(email).toLowerCase())) {\n      setEmailInvalid(false);\n      return true;\n    } else {\n      setEmailInvalid(true);\n      return false;\n    }\n  }\n  function validationName() {\n    const nameRegex = /^[a-zA-Z]+$/;\n    if (nameRegex.test(String(name).toLowerCase())) {\n      setNameInvalid(false);\n      return true;\n    } else {\n      setNameInvalid(true);\n      return false;\n    }\n  }\n  function validationSurname() {\n    const nameRegex = /^[a-zA-Z]+$/;\n    if (nameRegex.test(String(name).toLowerCase())) {\n      setSurnameInvalid(false);\n      return true;\n    } else {\n      setSurnameInvalid(true);\n      return false;\n    }\n  }\n  function validationPhone() {\n    const phoneRegex = /^[+]*[(]{0,1}[0-9]{1,4}[)]{0,1}[-\\s./0-9]*$/g;\n    if (phoneRegex.test(String(phone).toLowerCase())) {\n      setPhoneInvalid(false);\n      return true;\n    } else {\n      setPhoneInvalid(true);\n      return false;\n    }\n  }\n  const backToDetails = () => {\n    history.push(`/details/${personID}`);\n  };\n  return (\n    <section className=\"edit-container\">\n      <form onSubmit={handleSubmit}>\n        <img className=\"edit__img\" src={image} alt={`${name}`} />\n        <div className=\"input-container\">\n          <label className=\"input__key\">First name</label>\n          <input\n            type=\"text\"\n            className={`input__value ${nameInvalid ? \"invalid\" : \"\"}`}\n            value={name}\n            onChange={handleChangeName}\n          />\n        </div>\n        <div className=\"input-container\">\n          <label className=\"input__key\">Last name</label>\n          <input\n            type=\"text\"\n            className={`input__value ${surnameInvalid ? \"invalid\" : \"\"}`}\n            value={surname}\n            onChange={handleChangeSurname}\n          />\n        </div>\n        <div className=\"input-container\">\n          <label className=\"input__key\">Phone</label>\n          <input\n            type=\"text\"\n            value={phone}\n            onChange={handleChangePhone}\n            className={`input__value ${phoneInvalid ? \"invalid\" : \"\"}`}\n          />\n        </div>\n        <div className=\"input-container\">\n          <label className=\"input__key\">Email</label>\n          <input\n            type=\"text\"\n            value={email}\n            onChange={handleChangeEmail}\n            className={`input__value ${emailInvalid ? \"invalid\" : \"\"}`}\n          />\n        </div>\n        <input className=\"send\" type=\"submit\" value=\"Wyślij\" />\n      </form>\n    </section>\n  );\n};\nexport default Edit;\n","import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport { useHistory } from \"react-router-dom\";\nimport PhoneIcon from \"@material-ui/icons/Phone\";\nimport MailIcon from \"@material-ui/icons/Mail\";\n\nimport \"./Person.scss\";\nconst Person = ({ peopleList, setActive }) => {\n  const [people, setPeople] = useState([]);\n  let { personID } = useParams();\n  const history = useHistory();\n  useEffect(() => {\n    setPeople(peopleList);\n  }, [peopleList]);\n  useEffect(() => {\n    setActive(parseInt(personID));\n  }, [personID, setActive]);\n  const edit = (id) => {\n    history.push(`/edit/${id}`);\n  };\n  return (\n    <section className=\"details-container\">\n      {people[personID] ? (\n        <article className=\"details\">\n          <img\n            className=\"details__img\"\n            src={people[personID].picture.large}\n            alt={`${people[personID].name.first}`}\n          />\n          <div className=\"details__names\">\n            <h2 className=\"details__names__header\">Name</h2>\n            <div>\n              {people[personID].name.title} {people[personID].name.first}{\" \"}\n              {people[personID].name.last}\n            </div>\n          </div>\n          <div className=\"details__contact\">\n            <h2 className=\"details__contact__header\">Contact</h2>\n            <div className=\"details__contact__phone\">\n              <PhoneIcon className=\"details__contact__phone__icon\" />\n              {people[personID].phone}\n            </div>\n            <div className=\"details__contact__mail\">\n              <MailIcon className=\"details__contact__mail__icon\" />\n              {people[personID].email}\n            </div>\n          </div>\n        </article>\n      ) : null}\n\n      <button\n        className=\"edit\"\n        onClick={() => {\n          edit(personID);\n        }}\n      >\n        edit\n      </button>\n    </section>\n  );\n};\nexport default Person;\n","import React, { useState } from \"react\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\nimport \"./App.scss\";\nimport PersonsList from \"./Components/PersonsList/PersonsList\";\nimport Edit from \"./Components/Edit/Edit\";\nimport Person from \"./Components/Person/Person\";\n\nfunction App() {\n  const [peopleList, setPeopleList] = useState([]);\n  const [active, setActive] = useState();\n\n  return (\n    <HashRouter>\n      <div className=\"body-layout\">\n        <PersonsList\n          setPeopleList={setPeopleList}\n          peopleList={peopleList}\n          active={active}\n        />\n\n        <Switch>\n          <Route path=\"/edit/:personID\">\n            <Edit peopleList={peopleList} setPeopleList={setPeopleList} />\n          </Route>\n          <Route exact path=\"/details/:personID\">\n            <Person peopleList={peopleList} setActive={setActive} />\n          </Route>\n        </Switch>\n      </div>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}